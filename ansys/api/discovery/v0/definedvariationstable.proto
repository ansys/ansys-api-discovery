// ©2023, ANSYS Inc. Unauthorized use, distribution or duplication is prohibited.
syntax = "proto3";

package ansys.api.discovery.v0;

import "ansys/api/geometry/v0/models.proto";

option csharp_namespace = "Ansys.Api.Discovery.V0";
option go_package = "ansys/api/discovery/v0";

// Defined variation table servicer.
//
service DefinedVariationsTable{
  // Gets a whole row from the defined variations table
  rpc GetVariation(GetVariationRequest) returns(ansys.api.geometry.v0.Variation);

  // Get all the variations (i.e get all the table as rows list)
  rpc ListVariations(ListVariationsRequest) returns(ListVariationsResponse);
    
  // Get all the inputs.
  rpc ListInputs(ListInputsRequest) returns(ListInputsResponse);
    
  // Get all the outputs.
  rpc ListOutputs(ListOutputsRequest) returns(ListOutputsResponse);
    
  // Get an input variation table's cell
  rpc GetInputForVariation(GetInputForVariationRequest) returns(ansys.api.geometry.v0.InputParameter);
    
  // Set an input parameter
  rpc SetInputValue(SetInputValueRequest) returns(ansys.api.geometry.v0.InputParameter) ;

  // Create variation
  rpc CreateVariation(CreateVariationRequest) returns(CreateVariationResponse);
    
  // Get an output variation table's cell
  rpc GetOutputForVariation(GetOutputForVariationRequest) returns(ansys.api.geometry.v0.OutputParameter);
    
  // Get a variation input table's column
  rpc GetInputColumn(GetInputColumnRequest) returns(GetInputColumnResponse);
    
  // Get a variation output table's column
  rpc GetOutputColumn(GetOutputColumnRequest) returns(GetOutputColumnResponse);
    
  // Set a star status for a variations list.
  rpc SetStarredStatus(SetStarredStatusRequest) returns(SetStarredStatusResponse) ;
    
  // Updates outputs for current variation
  rpc UpdateCurrent(UpdateCurrentRequest) returns(UpdateCurrentResponse);
    
  // Updates outputs for starred variations
  rpc UpdateStarred(UpdateStarredRequest) returns(UpdateStarredResponse);
    
  // Updates outputs for current variation
  rpc UpdateAll(UpdateAllRequest) returns(UpdateAllResponse) ;

  // Asks if the solve is running
  rpc IsSolving(ansys.api.geometry.v0.Empty) returns(IsSolvingResponse);

}

message GetVariationRequest{
  // The moniker to access the variation.
  string moniker = 1;
}

message ListVariationsRequest{
}

message ListVariationsResponse{
  // The variations on this page.
  repeated ansys.api.geometry.v0.Variation defined_variations = 1 ;
}

message ListInputsRequest{;
}

message ListInputsResponse{
  // The inputs on this page.
  repeated ansys.api.geometry.v0.InputColumn inputs = 1 ;
}

message ListOutputsRequest{
}

message ListOutputsResponse{
  // The outputs on this page.
  repeated ansys.api.geometry.v0.OutputColumn outputs = 1 ;
}

message GetInputForVariationRequest{
  // The variation's moniker.
  string variation_moniker = 1;
  // The parameter' moniker.
  string input_parameter_moniker = 2;
}

message SetInputValueRequest{
  // The variation's moniker.
  string variation_moniker = 1;
  // The input parameter.
  ansys.api.geometry.v0.InputParameter defined_variation_table_input = 2;
}

message GetOutputForVariationRequest{
  // The variation's moniker.
  string variation_moniker = 1;
  // The parameter' moniker.
  string output_parameter_moniker = 2;
}

message GetInputColumnRequest{
  // The parameter' moniker.
  string input_parameter_moniker = 1;
}

message GetInputColumnResponse{
  // The parameter's variations column.
  ansys.api.geometry.v0.InputColumn column = 1;
}

message GetOutputColumnRequest{
  // The parameter' moniker.
  string output_parameter_moniker = 1;
}

message GetOutputColumnResponse{
  // The parameter's variations column.
  ansys.api.geometry.v0.OutputColumn column = 1;
}

message SetStarredStatusRequest{
  // The variations monikers.
  repeated string variations_monikers = 1;
  // The starred status
  bool starred = 2;
}

message CreateVariationRequest{
  string name= 1;
}

message CreateVariationResponse{
  string result = 1;
}

message SetStarredStatusResponse{
}

///UPDATES
//
message UpdateCurrentRequest{
}

message UpdateCurrentResponse{
  // The result
  bool result = 1;
}

message UpdateStarredRequest{
}

message UpdateStarredResponse{
  // The result
  bool result = 1;
}

message UpdateAllRequest{
}

message UpdateAllResponse{
  // The result
  bool result = 1;
}

message IsSolvingResponse{
  // The result
  bool is_solving = 1;
}
