// Copyright 2022, ANSYS Inc. Unauthorized use, distribution or duplication is prohibited.
syntax = "proto3";
package ansys.api.discovery.v0;
import "ansys/api/discovery/google/api/annotations.proto";
import "ansys/api/discovery/v0/models.proto";
import "google/protobuf/field_mask.proto";
option csharp_namespace = "Ansys.Api.Discovery.V0";
option go_package = "ansys/api/discovery/v0";

// Named Selections
//
service NamedSelections{
  // Gets a named selection.
  rpc GetNamedSelection(GetNamedSelectionRequest) returns(NamedSelection) {
    option(google.api.http) = {
      get: "/v0/namedselections/{moniker}"
    };
  }
  // Creates a named selection. This is a custom method as the signature is non-standard.
  rpc CreateNamedSelectionCustom(CreateNamedSelectionCustomRequest) returns(NamedSelection) {
    option(google.api.http) = {
      post: "/v0/namedselections:create"
      body : "*"
    };
  }
  // Lists all named selections.
  rpc ListNamedSelections(ListNamedSelectionsRequest) returns(ListNamedSelectionsResponse) {
    option(google.api.http) = {
      get: "/v0/namedselections"
    };
  }
  // Adds members to a named selection.
  // UNDER REVIEW for V1
  rpc AddMembers(AddMembersRequest) returns(AddMembersResponse) {
    option(google.api.http) = {
      post: "/v0/namedselections:addmembers"
      body : "*"
    };
  }
  // Removes members from a named selection.
  // UNDER REVIEW for V1
  rpc RemoveMembers(RemoveMembersRequest) returns(RemoveMembersResponse) {
    option(google.api.http) = {
      post: "/v0/namedselections:removemembers"
      body : "*"
    };
  }
  // Deletes a named selection.
  rpc DeleteNamedSelection(DeleteNamedSelectionRequest) returns(DeleteNamedSelectionResponse) {
    option(google.api.http) = {
      delete: "/v0/namedselections/{moniker}"
    };
  }
  // Deletes multiple named selections.
  rpc DeleteNamedSelections(DeleteNamedSelectionsRequest) returns(DeleteNamedSelectionsResponse) {
    option(google.api.http) = {
      delete: "/v0/namedselections:deletemultiple"
    };
  }
  // Sets the active user selection to the supplied named selection.
  // UNDER REVIEW for V1
  rpc SetSelectionToNamedSelection(SetSelectionToNamedSelectionRequest) returns(SetSelectionToNamedSelectionResponse) {
    option(google.api.http) = {
      post: "/v0/namedselections/{moniker}:setselection"
      body : "*"
    };
  }
}

message GetNamedSelectionRequest{
  // Moniker of the named selection.
  string moniker = 1;
  // The field mask to filter the named selection. Not setting a field mask will return 'default' information.
  google.protobuf.FieldMask fields = 2;
}

message CreateNamedSelectionCustomRequest{
  // Name of the named selection.
  string display_name = 1;
  // Member monikers to populate the named selection.
  repeated string member_monikers = 2             [json_name = "member_monikers"];
}

message ListNamedSelectionsRequest {
  // The parent, which must be empty.
  string parent = 1;
  // The maximum number of items to return.
  int32 page_size = 2;
  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
  // The view.
  NamedSelectionView view = 4;
  // The filter.
  string filter = 5;
}

message ListNamedSelectionsResponse{
  // The named selections on this page.
  repeated NamedSelection named_selections = 1        [json_name = "named_selections"];
  // Next page token, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message AddMembersRequest{
  // Moniker of the named selection.
  string moniker = 1;
  // Monikers of the entities to add to the named selection.
  repeated string member_monikers = 2             [json_name = "member_monikers"];
}

message AddMembersResponse{
  // Updated named selection.
  NamedSelection named_selection = 1;
}

message RemoveMembersRequest{
  // Moniker of the named selection.
  string moniker = 1;
  // Monikers of the entities to remove from the named selection.
  repeated string member_monikers = 2             [json_name = "member_monikers"];
}

message RemoveMembersResponse{
  // Updated named selection.
  NamedSelection named_selection = 1            [json_name = "named_selection"];
}

message DeleteNamedSelectionRequest{
  // The moniker of the named selection to delete.
  string moniker = 1;
}

message DeleteNamedSelectionResponse{
}

message SetSelectionToNamedSelectionRequest{
  // Moniker of the named selection to use.
  string moniker = 1;
}

message SetSelectionToNamedSelectionResponse{
}

message DeleteNamedSelectionsRequest{
  // The parent, which must be empty.
  string parent = 1;
  // The filter to use.
  string filter = 2;
}

message DeleteNamedSelectionsResponse{
  // In the case of any failures, the monikers of the failed named selections will be returned
  repeated string failures = 1; 
}


