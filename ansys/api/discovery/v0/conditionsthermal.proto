// Copyright 2023, ANSYS Inc. Unauthorized use, distribution or duplication is prohibited.
syntax = "proto3";
package ansys.api.discovery.v0.conditions.conditionsthermal;

import "ansys/api/discovery/v0/discoverymodels.proto";

option csharp_namespace = "Ansys.Api.Discovery.V0.Conditions.ConditionsThermal";

service ConditionsThermal
{
  //Heat condition methods
  rpc CreateHeatVolumetricTotal(HeatCreationRequest) returns (HeatTotalCreationResponse);

  rpc CreateHeatVolumetricDistributed(HeatCreationRequest) returns (HeatVolumetricDistributedCreationResponse);

  rpc CreateHeatSurfaceTotal(HeatCreationRequest) returns (HeatTotalCreationResponse);

  rpc CreateHeatSurfaceDistributed(HeatCreationRequest) returns (HeatSurfaceDistributedCreationResponse);

  rpc ChangeHeatLocation(ChangeLocationExtendedRequest) returns(ChangeResponse);

  rpc ChangeTotalHeat(ChangeQuantityRequest) returns(ChangeResponse);

  rpc ChangeHeatPerUnitVolume(ChangeQuantityRequest) returns(ChangeResponse);

  rpc ChangeHeatPerUnitArea(ChangeQuantityRequest) returns(ChangeResponse);

  rpc ChangeHeatSpecification(ChangeHeatSpecificationRequest) returns(ChangeResponse);

  //Temperature condition methods
  rpc CreateTemperatureVolumetric(TemperatureCreationRequest) returns (TemperatureCreationResponse);

  rpc CreateTemperatureSurface(TemperatureCreationRequest) returns (TemperatureCreationResponse);

  rpc ChangeTemperatureLocation(ChangeLocationExtendedRequest) returns(ChangeResponse);

  rpc ChangeTemperatureMagnitude(ChangeQuantityRequest) returns(ChangeResponse);

  //Insulated condition methods
  rpc CreateInsulated(InsulatedCreationRequest) returns (InsulatedCreationResponse);

  rpc ChangeInsulatedLocation(ChangeLocationRequest) returns(ChangeResponse);

  // Convection condition methods
  rpc CreateConvection(ConvectionCreationRequest) returns (ConvectionCreationResponse);

  rpc ChangeConvectionLocation(ChangeLocationRequest) returns(ChangeResponse);

  rpc ChangeConvectionCoefficientMagnitude(ChangeQuantityRequest) returns(ChangeResponse);
  
  rpc ChangeConvectionTemperatureMagnitude(ChangeQuantityRequest) returns(ChangeResponse);
  
}

// Command requests and responses

// Heat
message ChangeHeatSpecificationRequest{
  string object_id = 1;
  HeatSpecification heat_specification = 2;
}

message HeatCreationRequest{
  ScopedCreationData creation_data = 1;
  Quantity heat = 2;
}

message HeatTotalCreationResponse{
  CreationResponse condition_response = 1;
  HeatTotalDefinition condition_data = 2;
}

message HeatVolumetricDistributedCreationResponse{
  CreationResponse condition_response = 1;
  HeatPerVolumeDefinition condition_data = 2;
}

message HeatSurfaceDistributedCreationResponse{
  CreationResponse condition_response = 1;
  HeatPerAreaDefinition condition_data = 2;
}

// Temperature
message TemperatureCreationRequest{
  ScopedCreationData creation_data = 1;
  Quantity temperature = 2;
}

message TemperatureCreationResponse{
  CreationResponse condition_response = 1;
  TemperatureDefinition condition_data = 2;
}

// Insulated
message InsulatedCreationRequest{
  ScopedCreationData creation_data = 1;
}

message InsulatedCreationResponse{
  CreationResponse condition_response = 1;
  InsulatedDefinition condition_data = 2;
}

// Convection
message ConvectionCreationRequest{
  ScopedCreationData creation_data = 1;
  Quantity coefficient = 2;
  Quantity temperature = 3;

}

message ConvectionCreationResponse{
  CreationResponse condition_response = 1;
  ConvectionDefinition condition_data = 2;
}


// Thermal enumerations

enum HeatSpecification {
  TOTALHEAT = 0;
  HEATPERUNITVOLUMEORAREA = 1;
}

// Thermal condition definitions

message HeatTotalDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  Quantity total_heat = 7;
}

message HeatPerAreaDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  Quantity heat_per_unitarea = 6;
}

message HeatPerVolumeDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  Quantity heat_per_unitvolume = 6;
}

message TemperatureDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  Quantity magnitude = 6;
}

message InsulatedDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
}

message ConvectionDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  Quantity coefficient = 6;
  Quantity temperature = 7;
}