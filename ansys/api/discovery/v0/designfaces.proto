// Copyright 2021, ANSYS Inc. Unauthorized use, distribution or duplication is prohibited.
syntax = "proto3";
package ansys.api.discovery.v0;
import "ansys/api/discovery/v0/google/api/annotations.proto";
import "ansys/api/discovery/v0/models.proto";
import "google/protobuf/field_mask.proto";
option csharp_namespace = "Ansys.Api.Discovery.V0";
option go_package = "ansys/api/discovery/v0";

service DesignFaces{
  // Gets a design face.
  rpc GetDesignFace(GetDesignFaceRequest) returns(DesignFace) {
    option(google.api.http) = {
      get: "/v0/designfaces/{moniker}"
    };
  }
  // Lists all design faces.
  rpc ListDesignFaces(ListDesignFacesRequest) returns(ListDesignFacesResponse) {
    option(google.api.http) = {
      get: "/v0/designfaces"
    };
  }
  // Gets the user-selected design faces in the current active window.
  // UNDER REVIEW for V1
  rpc GetUserSelectedDesignFaces(GetUserSelectedDesignFacesRequest) returns(GetUserSelectedDesignFacesResponse) {
    option(google.api.http) = {
      get: "/v0/designfaces:userselected"
    };
  }
  // Puts the user-selected design faces in the current active window.
  // UNDER REVIEW for V1
  rpc PutUserSelectedDesignFaces(PutUserSelectedDesignFacesRequest) returns(PutUserSelectedDesignFacesResponse) {
    option(google.api.http) = {
      post: "/v0/designfaces:userselected"
      body : "*"
    };
  }
  // Fills the suppled design faces.
  // UNDER REVIEW for V1
  rpc FillDesignFaces(FillDesignFacesRequest) returns(FillDesignFacesResponse) {
    option(google.api.http) = {
      post: "/v0/designfaces:fill"
      body : "*"
    };
  }
}

message GetDesignFaceRequest{
  // The moniker for the item being requested.
  string moniker = 1;
  // The field mask used to filter returned values.
  google.protobuf.FieldMask fields = 2;
}

message ListDesignFacesRequest{
  // The parent, which can be empty or "designbodies/{moniker}" or "parts/{moniker}".
  string parent = 1;
  // The maximum number of items to return.
  int32 page_size = 2;
  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
  // The view.
  DesignFaceView view = 4;
  // The filter.
  string filter = 5;
}

message ListDesignFacesResponse{
  // The faces on this page.
  repeated DesignFace design_faces = 1            [json_name="design_faces"];
  // Next page token, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetUserSelectedDesignFacesRequest{
}

message GetUserSelectedDesignFacesResponse{
  // The design faces currently selected.
  repeated DesignFace design_faces = 1            [json_name = "design_faces"];
}

message PutUserSelectedDesignFacesRequest{
  // The design faces to select.
  repeated DesignFace design_faces = 1            [json_name = "design_faces"];
}

message PutUserSelectedDesignFacesResponse{
}

message FillDesignFacesRequest{
  // The design faces to fill.
  repeated string monikers = 1;
}

message FillDesignFacesResponse{
}
