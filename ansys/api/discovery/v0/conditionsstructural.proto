// Copyright 2023, ANSYS Inc. Unauthorized use, distribution or duplication is prohibited.
syntax = "proto3";
package ansys.api.discovery.v0.conditions.conditionsstructural;

import "ansys/api/discovery/v0/discoverymodels.proto";

option csharp_namespace = "Ansys.Api.Discovery.V0.Conditions.ConditionsStructural";

service ConditionsStructural
{
  //Support condition methods
  rpc CreateSupportFixed(SupportGeneralCreationRequest) returns (SupportGeneralCreationResponse);
  rpc CreateSupportHinged(SupportGeneralCreationRequest) returns (SupportGeneralCreationResponse);
  rpc CreateSupportSliding(SupportGeneralCreationRequest) returns (SupportGeneralCreationResponse);
  rpc CreateSupportBall(SupportGeneralCreationRequest) returns (SupportGeneralCreationResponse);
  rpc CreateSupportDisplaced(SupportDisplacedCreationRequest) returns (SupportDisplacedCreationResponse);

  rpc ChangeSupportLocation(ChangeLocationRequest) returns(ChangeResponse);

  rpc ChangeSupportSpecification(ChangeSupportSpecificationRequest) returns(ChangeResponse);

  rpc ChangeSupportDisplacedOrientation(ChangeDirectionRequest) returns(ChangeResponse);
  
  rpc ChangeSupportDisplacedDX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeSupportDisplacedDY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeSupportDisplacedDZ(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeSupportDisplacedRX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeSupportDisplacedRY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeSupportDisplacedRZ(ChangeQuantityRequest) returns (ChangeResponse);

  rpc ChangeSupportDisplacedIsFixedDX(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeSupportDisplacedIsFixedDY(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeSupportDisplacedIsFixedDZ(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeSupportDisplacedIsFixedRX(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeSupportDisplacedIsFixedRY(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeSupportDisplacedIsFixedRZ(ChangeBooleanRequest) returns (ChangeResponse);

  //Force condition methods

  rpc CreateForceDistributedTotal(ForceDistributedTotalCreationRequest) returns (ForceDistributedTotalCreationResponse);

  rpc CreateForceDistributedArea(ForceDistributedAreaCreationRequest) returns (ForceDistributedAreaCreationResponse); 

  rpc CreateForceTorque(ForceTorqueCreationRequest) returns (ForceTorqueCreationResponse); 
    
  rpc ChangeForceLocation(ChangeLocationRequest) returns(ChangeResponse);
  
  rpc ChangeForceSpecification(ChangeForceSpecificationRequest) returns (ChangeResponse);
  rpc ChangeForceMagnitudeDefinition(ChangeForceMagnitudeDefinitionRequest) returns (ChangeResponse);
  rpc ChangeForceByReversingDirection(ChangeCommandRequest) returns (ChangeResponse);

  rpc ChangeForceDefinedByComponentEnabled(ChangeBooleanRequest) returns (ChangeResponse);

  rpc ChangeForceDistributedTotalMagnitude(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceDistributedTotalX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceDistributedTotalY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceDistributedTotalZ(ChangeQuantityRequest) returns (ChangeResponse);

  rpc ChangeForceDistributedAreaMagnitude(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceDistributedAreaX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceDistributedAreaY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceDistributedAreaZ(ChangeQuantityRequest) returns (ChangeResponse);

  rpc ChangeForceUseRemoteForceEnabled(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeForceDistributedRemotePositionX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceDistributedRemotePositionY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceDistributedRemotePositionZ(ChangeQuantityRequest) returns (ChangeResponse);

  rpc ChangeForceTorqueMagnitude(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceTorqueX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceTorqueY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeForceTorqueZ(ChangeQuantityRequest) returns (ChangeResponse);

  //Pressure condition methods
  rpc CreatePressure(PressureCreationRequest) returns (PressureCreationResponse);

  rpc ChangePressureLocation(ChangeLocationRequest) returns(ChangeResponse);

  rpc ChangePressureMagnitude(ChangeQuantityRequest) returns (ChangeResponse);


  //Displacement condition methods
  rpc CreateDisplacementTranslation(DisplacementTranslationCreationRequest) returns (DisplacementCreationResponse);
  rpc CreateDisplacementRotation(DisplacementRotationCreationRequest) returns (DisplacementCreationResponse);
  rpc CreateDisplacementCombined(DisplacementCombinedCreationRequest) returns (DisplacementCreationResponse);

  rpc ChangeDisplacementLocation(ChangeLocationRequest) returns(ChangeResponse);

  rpc ChangeDisplacementSpecification(ChangeDisplacementSpecificationRequest) returns(ChangeResponse);
  rpc ChangeDisplacementOrientation(ChangeDirectionRequest) returns(ChangeResponse);
  
  rpc ChangeDisplacementDX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeDisplacementDY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeDisplacementDZ(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeDisplacementTranslationalMagnitude(ChangeQuantityRequest) returns (ChangeResponse);

  rpc ChangeDisplacementRX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeDisplacementRY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeDisplacementRZ(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeDisplacementRotationalMagnitude(ChangeQuantityRequest) returns (ChangeResponse);

  rpc ChangeDisplacementIsFixedDX(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeDisplacementIsFixedDY(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeDisplacementIsFixedDZ(ChangeBooleanRequest) returns (ChangeResponse);
  
  rpc ChangeDisplacementIsFixedRX(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeDisplacementIsFixedRY(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeDisplacementIsFixedRZ(ChangeBooleanRequest) returns (ChangeResponse);
  
  rpc ChangeDisplacementUseRemotePointEnabled(ChangeBooleanRequest) returns (ChangeResponse);
  rpc ChangeDisplacementDistributedRemotePositionX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeDisplacementDistributedRemotePositionY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeDisplacementDistributedRemotePositionZ(ChangeQuantityRequest) returns (ChangeResponse);


  //Moment condition methods
  rpc CreateMomentLocal(MomentCreationRequest) returns (MomentCreationResponse);
  rpc CreateMomentGlobal(MomentCreationRequest) returns (MomentCreationResponse);

  rpc ChangeMomentLocation(ChangeLocationRequest) returns(ChangeResponse);

  rpc ChangeMomentSpecification(ChangeMomentSpecificationRequest) returns(ChangeResponse);
  rpc ChangeMomentOrientation(ChangeDirectionRequest) returns(ChangeResponse);

  rpc ChangeMomentLocalX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeMomentLocalY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeMomentLocalZ(ChangeQuantityRequest) returns (ChangeResponse);

  rpc ChangeMomentGlobalX(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeMomentGlobalY(ChangeQuantityRequest) returns (ChangeResponse);
  rpc ChangeMomentGlobalZ(ChangeQuantityRequest) returns (ChangeResponse);

}


// Command requests and responses

// Support
message ChangeSupportSpecificationRequest{
  string object_id = 1;
  SupportSpecification support_specification = 2;
}

message SupportGeneralCreationRequest{
  ScopedCreationData creation_data = 1;
}

message SupportGeneralCreationResponse{
  CreationResponse condition_response = 1;
  SupportGeneralDefinition condition_data = 2;
}

message SupportDisplacedCreationRequest{
  ScopedCreationData creation_data = 1;
  SupportDisplacedProperties support_displaced = 2;
}

message SupportDisplacedCreationResponse{
  CreationResponse condition_response = 1;
  SupportDisplacedDefinition condition_data = 2;
}


// Force
message ChangeForceSpecificationRequest{
  string object_id = 1;
  ForceSpecification force_specification = 2;
}

message ChangeForceMagnitudeDefinitionRequest{
  string object_id = 1;
  ForceMagnitudeDefinition force_magnitude_definition = 2;
}

message ForceDistributedTotalCreationRequest{
  ScopedCreationData creation_data = 1;
  ForceDistributedProperties force_properties = 2;
}

message ForceDistributedTotalCreationResponse{
  CreationResponse condition_response = 1;
  ForceDistributedDefinition condition_data = 2;
}

message ForceDistributedAreaCreationRequest{
  ScopedCreationData creation_data = 1;
  ForceDistributedProperties force_properties = 2;
}

message ForceDistributedAreaCreationResponse{
  CreationResponse condition_response = 1;
  ForceDistributedDefinition condition_data = 2;
}

message ForceTorqueCreationRequest{
  ScopedCreationData creation_data = 1;
  ForceTorqueProperties force_properties = 2;
}

message ForceTorqueCreationResponse{
  CreationResponse condition_response = 1;
  ForceTorqueDefinition condition_data = 2;
}

// Pressure
message PressureCreationRequest{
  ScopedCreationData creation_data = 1;
  PressureProperties pressure_properties = 2;
}

message PressureCreationResponse{
  CreationResponse condition_response = 1;
  PressureDefinition condition_data = 2;
}

// Displacement
message DisplacementTranslationCreationRequest{
  ScopedCreationData creation_data = 1;
  DisplacementTranslationProperties displacement_properties = 2;
}

message DisplacementRotationCreationRequest{
  ScopedCreationData creation_data = 1;
  DisplacementRotationProperties displacement_properties = 2;
}

message DisplacementCombinedCreationRequest{
  ScopedCreationData creation_data = 1;
  DisplacementCombinedProperties displacement_properties = 2;
}

message DisplacementCreationResponse{
  CreationResponse condition_response = 1;
  DisplacementDefinition condition_data = 2;
}

message ChangeDisplacementSpecificationRequest{
  string object_id = 1;
  DisplacementSpecification displacement_specification = 2;
}

// Moment
message MomentCreationRequest{
  ScopedCreationData creation_data = 1;
  MomentProperties moment_properties = 2;
}

message MomentCreationResponse{
  CreationResponse condition_response = 1;
  MomentDefinition condition_data = 2;
}

message ChangeMomentSpecificationRequest{
  string object_id = 1;
  MomentSpecification moment_specification = 2;
}


// Support enumerations

enum SupportSpecification {
  FIXED = 0;
  SLIDING = 1;
  HINGED = 2;
  BALL = 3;
  DISPLACED = 4;
}

// Support condition definitions

message SupportGeneralDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  SupportSpecification support_type = 6;
}

message SupportDisplacedDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  SupportSpecification support_type = 6;
  TensorOfOptionalQuantities displacement = 7;
}

message SupportDisplacedProperties {
  TensorOfOptionalQuantities displacement = 1;
}

// force enumerations

enum ForceMagnitudeDefinition {
  TOTALFORCE = 0;
  FORCEPERAREA = 1;
}

enum ForceSpecification {
  DISTRIBUTED = 0;
  TORQUE = 1;
}

// force condition definitions

message ForceDistributedDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  ForceDistributedProperties force_distributed = 6;
}

message ForceDistributedProperties {
  Quantity force = 1;
  OptionalVector force_components = 2;
  OptionalVector remote_point = 3;
}

message ForceTorqueDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  ForceTorqueProperties force_torque = 6;
}

message ForceTorqueProperties {
  Quantity force = 1;
  OptionalVector force_components = 2;
}

// Pressure condition definitions
message PressureProperties {
  Quantity pressure_magnitude = 1;
}

message PressureDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  PressureProperties pressure = 6;
}

// Displacement enumerations

enum DisplacementSpecification {
  TRANSLATION = 0;
  ROTATION = 1;
  COMBINED = 2;
}

// Displacement condition definitions

message DisplacementTranslationProperties {
  VectorOfOptionalQuantities displacement = 1;
  OptionalVector remote_point = 2;
}

message DisplacementRotationProperties {
  VectorOfOptionalQuantities rotation = 1;
  OptionalVector remote_point = 2;
}

message DisplacementCombinedProperties {
  VectorOfOptionalQuantities displacement = 1;
  VectorOfOptionalQuantities rotation = 2;
  OptionalVector remote_point = 3;
}

message DisplacementDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  DisplacementCombinedProperties displacement = 6;
}

// Displacement enumerations

enum MomentSpecification {
  GLOBAL = 0;
  LOCAL = 1;
}

// Displacement condition definitions

message MomentProperties {
  QuantityVector moment = 1;
}

message MomentDefinition {
  string id = 1;
  string parent_id = 2;
  string label = 3;
  repeated string locations = 4;
  bool suppressed = 5;
  MomentProperties local = 6;
  MomentProperties global = 7;
}